---
- hosts: all
  become: true
  tasks:
  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
      - gnupg2

  - name: Add an apt signing key for Docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add apt repository for stable version
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
      state: present

  - name: Install docker and its dependecies
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - containerd.io
      - docker-ce
      - docker-ce-cli
    notify:
      - docker status

  - name: Add root user to docker group
    user:
      name: root
      group: docker

    # Fix "cgroup driver" for docker to match `systemd`, which is the preferred by
    # kubeadm based setups. By default, docker uses `cgroupfs` as "cgroup driver".
    # https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/#configuring-a-cgroup-driver
  - name: Ensure systemd as the cgroup driver in docker
    synchronize:
      src: ../docker/daemon.json
      dest: /etc/docker/daemon.json

  - name: Reload docker
    command: systemctl restart docker

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Install Kubernetes binaries
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet
        - kubeadm
        - kubectl

  - name: Disable IP tables
    shell: |
      echo "net.bridge.bridge-nf-call-iptables=1" >> /etc/sysctl.conf
      echo "net.ipv4.ip_forward=1" >> /etc/sysctl.conf
      sysctl -p

  - name: Copy the join command to server location
    copy: src=join-command dest=/tmp/join-command.sh mode=0777

  - name: Join the node to cluster
    command: sh /tmp/join-command.sh

  - name: Install Falco for auditing
    shell: |
      curl -s https://falco.org/repo/falcosecurity-3672BA8F.asc | apt-key add -
      echo "deb https://download.falco.org/packages/deb stable main" | tee -a /etc/apt/sources.list.d/falcosecurity.list
      apt-get update -y
      apt-get install -y linux-headers-$(uname -r)
      apt-get install -y falco
      systemctl enable falco
      systemctl start falco

  - name: Install Trivy as vulnerability scanner
    shell: |
      apt-get install wget apt-transport-https gnupg lsb-release
      wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
      echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | tee -a /etc/apt/sources.list.d/trivy.list
      apt-get update
      apt-get install -y trivy

  - name: Install tools for debugging/troubleshooting
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apparmor-utils

  # Fix for vagrant environments
  - name: Ensure kubelet configs are correct
    synchronize:
      src: "../kubelet/{{ kubelet_file }}"
      dest: "/etc/systemd/system/kubelet.service.d/10-kubeadm.conf"

  - name: Reload daemon
    command: systemctl daemon-reload

  - name: Reload kubelet
    command: systemctl restart kubelet

  handlers:
  - name: docker status
    service: name=docker state=started
